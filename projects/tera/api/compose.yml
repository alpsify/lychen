name: tera-api

services:
  database:
    environment:
      - POSTGRES_DB=${POSTGRES_DB:-app}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-PasswordForLocal!}
      - POSTGRES_USER=${POSTGRES_USER:-userlocal}
    healthcheck:
      retries: 5
      start_period: 60s
      test: ['CMD', 'pg_isready', '-d', '${POSTGRES_DB:-app}', '-U', '${POSTGRES_USER:-userlocal}']
      timeout: 5s
    image: postgres:${POSTGRES_VERSION:-16}-alpine
    volumes:
      - database_data:/var/lib/postgresql/data:rw

  mailpit:
    environment:
      MP_DATABASE: /data/mailpit.db
      MP_MAX_MESSAGES: 5000
      MP_SMTP_AUTH_ACCEPT_ANY: 1
      MP_SMTP_AUTH_ALLOW_INSECURE: 1

    image: axllent/mailpit
    restart: unless-stopped
    volumes:
      - mailpit_data:/data

  php:
    depends_on:
      database:
        condition: service_healthy
    environment:
      # Run "composer require symfony/mercure-bundle" to install and configure the Mercure integration
      #MERCURE_URL: ${CADDY_MERCURE_URL:-http://php/.well-known/mercure}
      #MERCURE_PUBLIC_URL: ${CADDY_MERCURE_PUBLIC_URL:-https://${SERVER_NAME:-localhost}/.well-known/mercure}
      #MERCURE_JWT_SECRET: ${CADDY_MERCURE_JWT_SECRET:-!ChangeThisMercureHubJWTSecretKey!}
      APP_RUNTIME: Runtime\FrankenPhpSymfony\Runtime
      # Run "composer require symfony/orm-pack" to install and configure Doctrine ORM
      DATABASE_URL: postgresql://${POSTGRES_USER:-userlocal}:${POSTGRES_PASSWORD:-PasswordForLocal!}@database:5432/${POSTGRES_DB:-app}?serverVersion=${POSTGRES_VERSION:-16}&charset=${POSTGRES_CHARSET:-utf8}
      SERVER_NAME: ${SERVER_NAME:-localhost}, php:80
      TRUSTED_HOSTS: ${TRUSTED_HOSTS:-^${SERVER_NAME:-example\.com|localhost}|php$$}
      #MERCURE_PUBLISHER_JWT_KEY: ${CADDY_MERCURE_JWT_SECRET:-!ChangeThisMercureHubJWTSecretKey!}
      #MERCURE_SUBSCRIBER_JWT_KEY: ${CADDY_MERCURE_JWT_SECRET:-!ChangeThisMercureHubJWTSecretKey!}
      TRUSTED_PROXIES: ${TRUSTED_PROXIES:-127.0.0.0/8,10.0.0.0/8,172.16.0.0/12,192.168.0.0/16}
    image: ${IMAGES_PREFIX:-}tera-api
    ports:
      # HTTP
      - protocol: tcp
        published: ${HTTP_PORT:-80}
        target: 80
      # HTTPS
      - protocol: tcp
        published: ${HTTPS_PORT:-443}
        target: 443
      # HTTP/3
      - protocol: udp
        published: ${HTTP3_PORT:-443}
        target: 443
    restart: unless-stopped
    volumes:
      - caddy_data:/data
      - caddy_config:/config
      - ../../../libs/php:/packages

  rabbitmq:
    environment:
      - RABBITMQ_DEFAULT_VHOST=alfred
    image: rabbitmq:4.0.4-management-alpine
    ports:
      - '5672:5672'
      - '15672:15672'

  redis:
    image: redis:alpine

volumes:
  caddy_config:
  caddy_data:
  database_data:
  mailpit_data:
